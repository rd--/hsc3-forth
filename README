FORTH SUPERCOLLIDER
-------------------

`HSC3-FORTH` is a simple-minded [FORTH][forth] interpreter.

The only data type is the [SUPERCOLLIDER][sc3] `UNIT GENERATOR`.

A FORTH answer to the eternal question,
[WHY SUPERCOLLIDER?](sw/hsc3-graphs/html/why-supercollider.scd.html)

~~~~
: RVB 5 0 DO 0.05 0 0.05 RAND.IR 2 CLONE 1 ALLPASSN LOOP ; 0.2 DUST.AR
50 * 200 3200 RAND.IR 0.003 RESONZ 10 CLONE MIX DUP 0.046 0.048 DELAYN
0.1 0 0.1 RAND.IR LFNOISE1.KR 0.04 * 0.05 + 15 COMBL 7 CLONE MIX RVB
0.2 * + PLAY
~~~~

[![][img]][img]

[img]: sw/hsc3-graphs/svg/why-supercollider.svg

There is an `HSC3-FORTH` [EMACS][emacs] mode, a derivative of [FORTH-MODE][gforth].

To build type:

~~~~
cd hs ; prefix=~/opt make install
~~~~

To hear the above type `C-cC-r` in EMACS, or in a shell type:

~~~~
hsc3-forth < ~/sw/hsc3-graphs/gr/why-supercollider.fs
~~~~

To quieten there is the forth word `STOP`.

`HSC3-FORTH` is CASE-INSENSITIVE.

It follows the [HASKELL][hs] supercollider ([HSC3][hsc3]) rules.

It is very partial.

It is known to work as far as the translated graphs at [HSC3-GRAPHS](?t=hsc3-graphs).

Search for `FS` in the [INDEX](?t=hsc3-graphs&m=md/ix.md).

Â© [rohan drape][rd], 2014, [gpl][gpl].

[rd]: http://rd.slavepianos.org/
[hsc3]: http://rd.slavepianos.org/?t=hsc3
[hs]: http://haskell.org/
[sc3]: http://audiosynth.com/
[forth]: http://www.forth.org/
[gpl]: http://gnu.org/copyleft/
[gforth]: http://www.gnu.org/software/gforth/
[emacs]: http://www.gnu.org/software/emacs/
